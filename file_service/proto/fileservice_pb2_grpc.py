# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import fileservice_pb2 as proto_dot_fileservice__pb2


class FileServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DownloadFile = channel.unary_stream(
        '/FileService/DownloadFile',
        request_serializer=proto_dot_fileservice__pb2.FileInfo.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.FileData.FromString,
        )
    self.FileSearch = channel.unary_unary(
        '/FileService/FileSearch',
        request_serializer=proto_dot_fileservice__pb2.FileInfo.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.ack.FromString,
        )
    self.FileList = channel.unary_unary(
        '/FileService/FileList',
        request_serializer=proto_dot_fileservice__pb2.UserInfo.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.FileListResponse.FromString,
        )
    self.ReplicateFile = channel.stream_unary(
        '/FileService/ReplicateFile',
        request_serializer=proto_dot_fileservice__pb2.FileData.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.ack.FromString,
        )
    self.UploadFile = channel.stream_unary(
        '/FileService/UploadFile',
        request_serializer=proto_dot_fileservice__pb2.FileData.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.ack.FromString,
        )
    self.FileDelete = channel.unary_unary(
        '/FileService/FileDelete',
        request_serializer=proto_dot_fileservice__pb2.FileInfo.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.ack.FromString,
        )
    self.UpdateFile = channel.stream_unary(
        '/FileService/UpdateFile',
        request_serializer=proto_dot_fileservice__pb2.FileData.SerializeToString,
        response_deserializer=proto_dot_fileservice__pb2.ack.FromString,
        )


class FileServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DownloadFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FileSearch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FileList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReplicateFile(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadFile(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FileDelete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateFile(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FileServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DownloadFile': grpc.unary_stream_rpc_method_handler(
          servicer.DownloadFile,
          request_deserializer=proto_dot_fileservice__pb2.FileInfo.FromString,
          response_serializer=proto_dot_fileservice__pb2.FileData.SerializeToString,
      ),
      'FileSearch': grpc.unary_unary_rpc_method_handler(
          servicer.FileSearch,
          request_deserializer=proto_dot_fileservice__pb2.FileInfo.FromString,
          response_serializer=proto_dot_fileservice__pb2.ack.SerializeToString,
      ),
      'FileList': grpc.unary_unary_rpc_method_handler(
          servicer.FileList,
          request_deserializer=proto_dot_fileservice__pb2.UserInfo.FromString,
          response_serializer=proto_dot_fileservice__pb2.FileListResponse.SerializeToString,
      ),
      'ReplicateFile': grpc.stream_unary_rpc_method_handler(
          servicer.ReplicateFile,
          request_deserializer=proto_dot_fileservice__pb2.FileData.FromString,
          response_serializer=proto_dot_fileservice__pb2.ack.SerializeToString,
      ),
      'UploadFile': grpc.stream_unary_rpc_method_handler(
          servicer.UploadFile,
          request_deserializer=proto_dot_fileservice__pb2.FileData.FromString,
          response_serializer=proto_dot_fileservice__pb2.ack.SerializeToString,
      ),
      'FileDelete': grpc.unary_unary_rpc_method_handler(
          servicer.FileDelete,
          request_deserializer=proto_dot_fileservice__pb2.FileInfo.FromString,
          response_serializer=proto_dot_fileservice__pb2.ack.SerializeToString,
      ),
      'UpdateFile': grpc.stream_unary_rpc_method_handler(
          servicer.UpdateFile,
          request_deserializer=proto_dot_fileservice__pb2.FileData.FromString,
          response_serializer=proto_dot_fileservice__pb2.ack.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'FileService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
